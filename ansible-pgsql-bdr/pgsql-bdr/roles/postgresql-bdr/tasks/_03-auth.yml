---
- name: PostgreSQL BDR | Create database
  become: yes
  become_user: "{{ pgbdr_admin_user }}"
  postgresql_db:
    name: "{{ pgbdr_database }}"

- name: PostgreSQL BDR | Make sure the PostgreSQL users are present
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    encrypted: "{{ item.encrypted | default(true) }}"
    db: "{{ item.db | default(omit) }}"
    role_attr_flags: "{{ item.role_attr_flags | default(omit) }}"
    state: present
    login_user: "{{ pgbdr_admin_user }}"
  become: yes
  become_user: "{{ pgbdr_admin_user }}"
  with_items: "{{ pgbdr_users }}"
  when: pgbdr_users|length > 0

- name: PostgreSQL BDR | Backup pg_hba.conf
  command: dpkg-divert --quiet --local --divert {{ pgbdr_conf_directory }}/pg_hba.conf.dpkg-divert --rename {{ pgbdr_conf_directory }}/pg_hba.conf
  args:
    creates: "{{ pgbdr_conf_directory }}/pg_hba.conf.dpkg-divert"

- name: PostgreSQL BDR | Update pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "{{ pgbdr_conf_directory }}/pg_hba.conf"
    owner: "{{ pgbdr_service_user }}"
    group: "{{ pgbdr_service_group }}"
    mode: 0640
  notify: PostgreSQL BDR | Restart
